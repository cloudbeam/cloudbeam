<div class="pb-5 border-b border-gray-200 sm:pb-0">
  <h3 class="text-center text-2xl leading-6 font-medium text-gray-700 mt-5 mb-8">
    <%= @document.name %>
  </h3>
  <div class="mt-3 sm:mt-4">
    <!-- Dropdown menu on small screens -->
    <div class="sm:hidden">
      <label for="selected-tab" class="sr-only">Select a tab</label>
      <select id="selected-tab" name="selected-tab" class="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-orange focus:border-orange sm:text-sm rounded-md">
        <option selected>Manage</option>

        <option>Tracking</option>

        <option>Share</option>
      </select>
    </div>
    <!-- Tabs at small breakpoint and up -->
    <% if flash[:alert] %>
      <%= flash[:alert] %>
    <% end %>
    <div class="hidden sm:block">
      <nav class="-mb-px flex space-x-8" id="file-navpane">
        <a href="#" data-ref="manage" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-lg" aria-current="page">
          Manage
        </a>

        <a href="#" data-ref="tracking" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-lg">
          Tracking
        </a>

        <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300" -->
        <a href="#" data-ref="share" class="border-orange text-orange whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-lg">
          Share
        </a>
      </nav>
    </div>
  </div>
</div>
<div class="bg-white overflow-hidden text-gray-700">
  <%= render 'manage', document: @document, recipients: @recipients %>
  <%= render('tracking', recipients: @recipients) %>
  <%= render 'share' %>
  
</div>

<script>
  self.activePane = null;
  self.activePane = "manage";
  document.querySelector("#file-navpane").addEventListener('click', e => {
    e.preventDefault();
    console.log('clicked');
    let a = e.target.closest('a');
    if (a) {
      let refId = a.dataset.ref
      if (refId == self.activePane) {
        return;
      }
      let pane = document.querySelector(`#${refId}`);
      pane.classList.remove("hidden");
      pane.classList.add("active");
      document.querySelector(`#${self.activePane}`).classList.add("hidden");
      document.querySelector(`#${self.activePane}`).classList.remove("active");
      document.querySelector(`[data-ref="${self.activePane}"`).classList.remove("selected");
      document.querySelector(`[data-ref="${refId}"`).classList.add("selected");
      self.activePane = refId;
    }
  });
  document.querySelector("#clear").addEventListener('click', e => {
    e.preventDefault();
    document.querySelector("#message").value = ""
  });

  self.copyButtons = document.querySelectorAll(".copy-btn");
  Array.from(self.copyButtons).forEach(copyButton => {
    let code = copyButton.previousElementSibling;
    copyButton.addEventListener('click', e => {
      e.preventDefault();
      navigator.permissions.query({name: "clipboard-write"}).then(result => {
        if (result.state == "granted" || result.state == "prompt") {
          navigator.clipboard.writeText(code.value);
        }
      });
      copyButton.textContent = "copied";
      setTimeout(() => copyButton.textContent = "copy to clipboard", 1000);
    });
  });

  self.sendAgainButtons = document.querySelectorAll(".send-again-btn");
  Array.from(self.sendAgainButtons).forEach(sendAgainButton => {
    let recipient = sendAgainButton.dataset.recipient;
    let recipientId = sendAgainButton.dataset.recipientId;
    let documentId = sendAgainButton.dataset.documentId;
    sendAgainButton.addEventListener('click', e => {
      e.preventDefault();
      let confirmation = confirm(`This will send another email to ${recipient}. Are you sure?`);
      if (confirmation) {
        sendAgainButton.innerHTML = "<strong>Sending...</strong>";
        let xhr = new XMLHttpRequest();
        xhr.open("GET", `/distributeagain?recipient_id=${recipientId}&document_id=${documentId}`);
        // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.addEventListener('load', e => {
          e.preventDefault();
          sendAgainButton.innerHTML = "<strong>Message is on the way!</strong>";
          setTimeout(() => {
            sendAgainButton.innerHTML = "Send Again";
          }, 2000);
          console.log("email sent");
        });
        xhr.send();
      }
    });
  });
</script>
